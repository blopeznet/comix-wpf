<Application x:Class="LocalFilesDatabase.App" 
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
             xmlns:local="clr-namespace:LocalFilesDatabase" 
             xmlns:Converters="clr-namespace:LocalFilesDatabase.Common.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             d1p1:Ignorable="d" 
             StartupUri="MainWindow.xaml"
             Startup="Application_Startup"            
             xmlns:metrocontrols="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006">
  <Application.Resources>
    <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatSlider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Brown.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatButton.xaml" />


                <ResourceDictionary>


                    <FontFamily x:Key="CustomFontFamily">/LocalFilesDatabase;component/Assets/Fonts/tron.ttf#tron</FontFamily>

                    <Style x:Key="MahApps.Metro.Styles.MetroWatermarkTextBlock" BasedOn="{StaticResource MetroTextBlock}"
                          TargetType="{x:Type TextBlock}">

                        <Setter Property="IsHitTestVisible" Value="False" />
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="Opacity" Value="0.6" />

                    </Style>

                    <Color x:Key="BackgroundColor">#FFCC5704</Color>
                    <Color x:Key="BackgroundColor2">#FFE2E259</Color>
                    <Color x:Key="HeaderColor">#FF825A2C</Color>
                    <Color x:Key="AccentColor">#FF825A2C</Color>
                    <Color x:Key="AccentColor2">#FF825A2C</Color>
                    <SolidColorBrush x:Key="AccentBrush" Color="#FF825A2C"/>
                    <SolidColorBrush x:Key="AccentBaseColorBrush" Color="#FF846956"/>
                    <SolidColorBrush x:Key="HeaderColorBrush" Color="#FF825A2C"/>

                    <SolidColorBrush x:Key="BackgroundBrush" Color="#FFEBEBEB"/>
                    <SolidColorBrush x:Key="BackgroundBrush2" Color="#FFE2E259"/>
                    <SolidColorBrush x:Key="AccentBrush2" Color="#FF2F8E47"/>
                    <SolidColorBrush x:Key="FontColor">#010204</SolidColorBrush>
                    <SolidColorBrush x:Key="FontColor2">White</SolidColorBrush>
                    <SolidColorBrush x:Key="NonActiveWindowTitleColorBrush" Color="{StaticResource HeaderColor}"/>

                    <Converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
                    <Converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
                    <Converters:InvBooleanConverter x:Key="InvBooleanConverter"/>
                    <Converters:PathToFolderConverter x:Key="PathToFolderConverter"/>
                    <Converters:BytesToMbStringConverter x:Key="BytesToMbStringConverter"/>
                    <Converters:ByteArrayToBitmapImageConverter x:Key="ByteArrayToBitmapImageConverter"/>
                    <Converters:FolderDescriptionConverter x:Key="FolderDescriptionConverter"/>
                    <Converters:SnapDescriptionConverter x:Key="SnapDescriptionConverter"/>
                    <Converters:InvVisibilityConverter x:Key="InvVisibilityConverter"/>

                    <SolidColorBrush x:Key="Item.MouseOver.Background" Color="{StaticResource AccentColor}"/>
                    <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="{StaticResource AccentColor}"/>
                    <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="{StaticResource AccentColor}"/>
                    <SolidColorBrush x:Key="Item.MouseOver.Border" Color="Transparent"/>
                    <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="Transparent"/>
                    <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="Transparent"/>
                    <Style x:Key="ListViewContainerStyle" TargetType="{x:Type ListViewItem}">
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="Padding" Value="4,1"/>
                        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                                            <Setter Property="Opacity" Value="1.0" />
                                            <Setter Property="Foreground" Value="{StaticResource FontColor2}"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                                            <Setter Property="Foreground" Value="{StaticResource FontColor2}"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                                            <Setter Property="Foreground" Value="{StaticResource FontColor2}"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style x:Key="ListViewContainerStyleCustom" TargetType="{x:Type ListViewItem}">
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="Padding" Value="4,1"/>
                        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                        <ContentPresenter x:Name="Presenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Opacity" TargetName="Bd" Value="0.8"/>
                                            <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Opacity" TargetName="Bd" Value="0.5"/>
                                            <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Opacity" TargetName="Bd" Value="0.5"/>
                                            <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="ListViewContainerStyleClear" TargetType="{x:Type ListViewItem}">
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="Padding" Value="4,1"/>
                        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                                            <Setter Property="Opacity" Value="1.0" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style x:Key="ButtonClear" TargetType="{x:Type Button}">
                        <Setter Property="FontSize" Value="18"/>
                        <Setter Property="Background" Value="White"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="Padding" Value="1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsDefaulted" Value="true">
                                            <Setter Property="BorderBrush" Value="White"/>
                                        </Trigger>
                                        <Trigger Property="Control.IsMouseOver" Value="true">
                                            <Setter Property="Opacity" Value="0.7"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="DarkGray"/>
                                            <Setter Property="Opacity" Value="0.4"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style x:Key="AppBarButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonClear}">
                        <Style.Setters>
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="Height" Value="50"/>
                            <Setter Property="Width" Value="50"/>
                            <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="FontSize" Value="16"/>
                            <Setter Property="Margin" Value="4"/>
                        </Style.Setters>
                    </Style>
                    <DataTemplate x:Key="CoverTemplate">
                        <Grid HorizontalAlignment="Center" x:Name="GridCover" DataContext="{Binding}" MouseDown="Comic_MouseDown" 
                              VerticalAlignment="Center"  Background="{StaticResource BackgroundBrush}" 
                              Width="120" Height="190">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Image Grid.Row="0" 
                                   Source="{Binding CoverByteArray, Converter={StaticResource ByteArrayToBitmapImageConverter}}"
                                   Width="110"
                                   Stretch="UniformToFill"
                                   Margin="0,0,0,0"
                                   VerticalAlignment="Stretch" 
                                   HorizontalAlignment="Stretch"/>

                            <Grid Grid.Row="0" x:Name="PART_PagesProgressGrid"
                                      Height="12" Margin="0,0,0,-2"
                                      VerticalAlignment="Bottom"
                                      Panel.ZIndex="6"
                                      Background="Transparent"
                                      Opacity="0.85">
                                <Label x:Name="PART_BannerLabel"                               
                               FontSize="12"                                       
                               Foreground="{DynamicResource WhiteBrush}"
                               IsTabStop="False" />
                                <metrocontrols:MetroProgressBar
                                        Height="1"         
                                        Foreground="{StaticResource AccentBrush2}"
                                        Background="{StaticResource HeaderColorBrush}"
                                        Focusable="False" IsHitTestVisible="False"
                                        Value="{Binding CurrentPages}"                                             
                                        Minimum="0" 
                                        Maximum="{Binding TotalPages}" 
                                        VerticalAlignment="Bottom" 
                                        HorizontalAlignment="Stretch"
                                        Margin="0,0,0,2">
                                </metrocontrols:MetroProgressBar>
                            </Grid>

                            <StackPanel Grid.Row="2" Margin="8,4,4,4">
                                <TextBlock FontWeight="Bold" Text="{Binding DisplayName}" 
                                           Foreground="{DynamicResource FontColor}"                                            
                                           TextWrapping="Wrap" MaxHeight="32"
                                           TextTrimming="CharacterEllipsis" FontSize="12"/>
                                <TextBlock VerticalAlignment="Bottom" FontSize="10" 
                                       Foreground="{DynamicResource FontColor}" 
                                       HorizontalAlignment="Left">
                        <Run Text="Pagina "></Run>
                        <Run Text="{Binding CurrentPages}"></Run>
                        <Run Text=" de "></Run>
                        <Run Text="{Binding TotalPages}"></Run>
                                </TextBlock>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                    <Storyboard x:Key="sbStart">
                        <DoubleAnimation Storyboard.TargetProperty="Width" From="0" To="249" Duration="0:0:0.5"/>
                    </Storyboard>

                    <!--Scrollbar Thumbs-->
                    <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Thumb}">
                                    <Grid x:Name="Grid">
                                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                                        <Border x:Name="Rectangle1" CornerRadius="10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="Tag" Value="Horizontal">
                                            <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                            <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!--ScrollBars-->
                    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
                        <Setter Property="Margin" Value="0,0,0,0"/>
                        <Setter Property="Foreground" Value="LightGray" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Width" Value="40" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Grid x:Name="GridRoot" Width="19" Background="{TemplateBinding Background}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="0.00001*" />
                                        </Grid.RowDefinitions>

                                        <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                            <Track.Thumb>
                                                <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                                            </Track.Thumb>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                                            </Track.IncreaseRepeatButton>
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                                            </Track.DecreaseRepeatButton>
                                        </Track>
                                    </Grid>

                                    <ControlTemplate.Triggers>
                                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                            <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                                        </Trigger>
                                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                            <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                                        </Trigger>

                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                                        </Trigger>
                                        <Trigger Property="Orientation" Value="Horizontal">
                                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                                <Setter.Value>
                                                    <RotateTransform Angle="-90" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                                <Setter.Value>
                                                    <RotateTransform Angle="-90" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Width" Value="Auto" />
                                            <Setter Property="Height" Value="12" />
                                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <!--Template Collection-->
                    <DataTemplate x:Key="CollectionItemTemplate">
                        <Grid HorizontalAlignment="Center" x:Name="GridCover" DataContext="{Binding}" MouseDown="GridCover_MouseDown" 
                              VerticalAlignment="Center"
                              Width="140" Height="210">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Border Margin="6,0,6,0" BorderThickness="2" BorderBrush="{StaticResource AccentBrush}">
                                <Image Grid.Row="0" 
                                   Source="{Binding CoverByteArray, Converter={StaticResource ByteArrayToBitmapImageConverter}}"
                                   Width="140"
                                   Stretch="UniformToFill"
                                   Margin="0,0,0,0"
                                   VerticalAlignment="Stretch" 
                                   HorizontalAlignment="Stretch"/>
                            </Border>
                            <StackPanel Grid.Row="2" Margin="12,4,4,4" Opacity="1.0">
                                <TextBlock FontWeight="Bold" Text="{Binding Path, Converter={StaticResource PathToFolderConverter}}" 
                                           Foreground="{DynamicResource FontColor}"                                            
                                           TextWrapping="Wrap" MaxHeight="32"
                                           TextTrimming="CharacterEllipsis" FontSize="12"/>
                                <TextBlock VerticalAlignment="Bottom" FontSize="10" 
                                       Foreground="{DynamicResource FontColor}" 
                                       HorizontalAlignment="Left">                        
                                       <Run Text="{Binding FilesCount}"></Run>
                                       <Run Text=" ficheros. "></Run>
                                </TextBlock>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>

                    <vm:ViewModelLocator x:Key="Locator" d:IsDataSource="True" xmlns:vm="clr-namespace:LocalFilesDatabase.ViewModel" />
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
    </ResourceDictionary>
  </Application.Resources>
</Application>